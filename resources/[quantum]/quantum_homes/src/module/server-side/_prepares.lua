Tunnel = module('quantum', 'lib/Tunnel')
Proxy = module('quantum', 'lib/Proxy')
quantum = Proxy.getInterface('quantum')

quantum.prepare('quantum_homes/getApartamentOwner', 'select * from homes where home like @home and user_id = @user_id and home_owner = 1')
quantum.prepare('quantum_homes/getApartamentOwnerWithoutUser', 'select * from homes where home like @home and home_owner = 1')
quantum.prepare('quantum_homes/apartamentPermissions', 'select * from homes where home like @home AND user_id = @user_id')
quantum.prepare('quantum_homes/getHomeOwner', 'select * from homes where home = @home AND home_owner = 1')
quantum.prepare('quantum_homes/buyHome', 'insert homes (user_id, home, home_owner, garages, tax, configs, vip) values (@user_id, @home, @home_owner, @garages, @tax, @configs, @vip)')
quantum.prepare('quantum_homes/homePermissions', 'select * from homes where home = @home AND user_id = @user_id')
quantum.prepare('quantum_homes/countPermissions', 'select count(*) as qtd from homes where home = @home')
quantum.prepare('quantum_homes/newPermissions', 'insert into homes (user_id, home, home_owner, tax, garages, configs, vip) values (@user_id, @home, @home_owner, @tax, @garages, @configs, @vip)')
quantum.prepare('quantum_homes/removePermissions', 'delete from homes where home = @home and user_id = @user_id')
quantum.prepare('quantum_homes/removeResidents', 'delete from homes where home = @home and home_owner = 0')
quantum.prepare('quantum_homes/updateOwner', 'update homes set user_id = @nuser_id where user_id = @user_id and home = @home')
quantum.prepare('quantum_homes/sellHome', 'delete from homes where home = @home')
quantum.prepare('quantum_homes/selectHomes', 'select * from homes where home = @home')
quantum.prepare('quantum_homes/updateTax', 'update homes set tax = @tax where home = @home')
quantum.prepare('quantum_homes/userList', 'select * from homes where user_id = @user_id and home_owner = 1')
quantum.prepare('quantum_homes/userHomesList', 'select * from homes where user_id = @user_id')
quantum.prepare('quantum_homes/updateConfig', 'update homes set configs = @configs where home = @home')
quantum.prepare('quantum_homes/updateGarages', 'update homes set garages = @garages where home = @home and home_owner = 1')
quantum.prepare('quantum_homes/addGarage', 'insert homes_garages (home, blip, spawn) values (@home, @blip, @spawn)')
quantum.prepare('quantum_homes/permissions', 'select * from homes where home = @home')
quantum.prepare('quantum_homes/getGarage', 'select * from homes_garages where home = @home')
quantum.prepare('quantum_homes/delGarage', 'delete from homes_garages where home = @home')
quantum.prepare('quantum_homes/getHomes', 'select * from homes')
quantum.prepare('quantum_homes/getAllHomesOwner', 'select * from homes where home_owner = 1')